/*
 * dis_mgr_prv.h
 *
 *  Created on: Apr 15, 2013
 *      Author: Chris
 */

#ifndef DIS_MGR_PRV_H_
#define DIS_MGR_PRV_H_

#include "dis_mgr.h"

#define NUM_MESSAGES 5
#define MSG_SIZE 2

#define DISMGR_LOW_BATTERY_REPEAT_LOOP   120000 // 2 minutes
#define DISMGR_LOW_BATTERY_LOOP_ON_MS       200
#define DISMGR_LOW_BATTERY_LOOP_OFF_MS     5000
#define DISMGR_USB_CHARGING_LOOP_ON_MS     1000
#define DISMGR_USB_CHARGING_LOOP_OFF_MS    1000
#define DISMGR_BT_PAIRING_LOOP_ON_MS        500
#define DISMGR_BT_PAIRING_LOOP_OFF_MS       500
#define DISMGR_BT_CONNECTING_LOOP_ON_MS     500
#define DISMGR_BT_CONNECTING_LOOP_OFF_MS    500
#define DISMGR_MAN_SYNC_LOOP_ON_MS          500
#define DISMGR_MAN_SYNC_LOOP_OFF_MS         500
#define DISMGR_STATE_RETURN_MS              500 // how long after interrupting a prior state till we return

typedef enum DISMGR_state_e
{
    DISMGR_STATE_OFF,
    DISMGR_STATE_BATT_CHARGE_CHARGING_LOOP_ON,
    DISMGR_STATE_BATT_CHARGE_CHARGING_LOOP_OFF,
    DISMGR_STATE_BATT_CHARGE_CHARGING,
    DISMGR_STATE_BATT_CHARGE_CHARGED,
    DISMGR_STATE_BATT_LOW_REPEAT,
    DISMGR_STATE_BATT_LOW_LOOP_ON,
    DISMGR_STATE_BATT_LOW_LOOP_OFF,
    DISMGR_STATE_BT_PAIRING_LOOP_ON,
    DISMGR_STATE_BT_PAIRING_LOOP_OFF,
    DISMGR_STATE_BT_PAIRING,
    DISMGR_STATE_BT_CONNECTING_LOOP_ON,
    DISMGR_STATE_BT_CONNECTING_LOOP_OFF,
    DISMGR_STATE_BT_CONNECTING,
    DISMGR_STATE_MAN_SYNC_LOOP_ON,
    DISMGR_STATE_MAN_SYNC_LOOP_OFF,
    DISMGR_STATE_SHIP_MODE
} DISMGR_state_t;

typedef enum DISMGR_event_e
{
    DISMGR_EVENT_OFF = DISMGR_PATTERN_OFF,
    DISMGR_EVENT_BATT_LOW_REPEAT = DISMGR_PATTERN_BATT_LOW_REPEAT,
    DISMGR_EVENT_BATT_LOW_STOP = DISMGR_PATTERN_BATT_LOW_STOP,
    DISMGR_EVENT_BATT_LEVEL_ONESHOT = DISMGR_PATTERN_BATT_LEVEL_ONESHOT,
    DISMGR_EVENT_BATT_CHARGE_CHARGING_REPEAT = DISMGR_PATTERN_BATT_CHARGE_CHARGING_REPEAT,
    DISMGR_EVENT_BATT_CHARGE_CHARGED_REPEAT = DISMGR_PATTERN_BATT_CHARGE_CHARGED_REPEAT,
    DISMGR_EVENT_BATT_CHARGE_STOP = DISMGR_PATTERN_BATT_CHARGE_STOP,
    DISMGR_EVENT_SHIP_MODE_ONESHOT = DISMGR_PATTERN_SHIP_MODE_ONESHOT,
    DISMGR_EVENT_POWER_ON_ONESHOT = DISMGR_PATTERN_POWER_ON_ONESHOT,
    DISMGR_EVENT_BT_PAIRING_REPEAT = DISMGR_PATTERN_BT_PAIRING_REPEAT,
    DISMGR_EVENT_BT_PAIRING_SUCCEEDED_STOP = DISMGR_PATTERN_BT_PAIRING_SUCCEEDED_STOP,
    DISMGR_EVENT_BT_PAIRING_FAILED_STOP = DISMGR_PATTERN_BT_PAIRING_FAILED_STOP,
    DISMGR_EVENT_BT_CONNECTING_REPEAT = DISMGR_PATTERN_BT_CONNECTING_REPEAT,
    DISMGR_EVENT_BT_CONNECTING_SUCCEEDED_STOP = DISMGR_PATTERN_BT_CONNECTING_SUCCEEDED_STOP,
    DISMGR_EVENT_BT_CONNECTING_FAILED_STOP = DISMGR_PATTERN_BT_CONNECTING_FAILED_STOP,
    DISMGR_EVENT_MAN_SYNC_REPEAT = DISMGR_PATTERN_MAN_SYNC_REPEAT,
    DISMGR_EVENT_MAN_SYNC_SUCCEEDED_STOP = DISMGR_PATTERN_MAN_SYNC_SUCCEEDED_STOP,
    DISMGR_EVENT_MAN_SYNC_FAILED_STOP = DISMGR_PATTERN_MAN_SYNC_FAILED_STOP,
    DISMGR_EVENT_MAN_SYNC_START_ONESHOT = DISMGR_PATTERN_MAN_SYNC_START_ONESHOT,
    DISMGR_EVENT_MAN_SYNC_SUCCEEDED_ONESHOT = DISMGR_PATTERN_MAN_SYNC_SUCCEEDED_ONESHOT,
    DISMGR_EVENT_MAN_SYNC_FAILED_ONESHOT = DISMGR_PATTERN_MAN_SYNC_FAILED_ONESHOT,
    DISMGR_EVENT_RGB_DISPLAY = DISMGR_PATTERN_RGB_DISPLAY,
    DISMGR_EVENT_TIMEOUT = -1

} DISMGR_event_t;

typedef struct DISMGR_REQUEST_t
{
        DISMGR_event_t event;
        uint_8 param;
} DISMGR_request_t, * DISMGR_request_PTR_t;

#endif /* DIS_MGR_PRV_H_ */
