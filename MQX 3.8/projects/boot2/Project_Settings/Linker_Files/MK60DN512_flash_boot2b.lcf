# Default linker command file.

FORCE_ACTIVE {b2h}

MEMORY {
m_interrupts    (RX) : ORIGIN = 0x00012000, LENGTH = 0x000001E0
m_header        (RX) : ORIGIN = 0x00012200, LENGTH = 0x00000020
m_text          (RX) : ORIGIN = 0x00012220, LENGTH = 0x0000FDE0
reset_save_area (RW) : ORIGIN = 0x1FFF0000, LENGTH = 0x00000200
m_data          (RW) : ORIGIN = 0x1FFF0200, LENGTH = 0x0001FE00
# m_cfmprotrom  (RX) : ORIGIN = 0x00000400, LENGTH = 0x00000010
}

KEEP_SECTION { .vectortable }
KEEP_SECTION { .header }
# KEEP_SECTION { .cfmconfig }

SECTIONS {
.interrupts :
{
    __vector_table = .;
    * (.vectortable)
    . = ALIGN (0x4);
} > m_interrupts

.b2header :
{
    b2hdr = .;
    *(.b2header)
    . = ALIGN (0x4);
} > m_header

#.cfmprotect :
#{
#    *(.cfmconfig)
#    . = ALIGN (0x4);
#} > m_cfmprotrom

.app_text: 
{
	ALIGNALL(4);
        * (.init)	
        *(.text.SHLK)
        *(.text.FCFG)
        *(.data.g_fcfg_desc)
        * (.text)
		.= ALIGN(0x8) ;
        * (.rodata)
		.= ALIGN(0x4) ;
    ___ROM_AT = .;
} > m_text

.save_across_boots:
{
   __SAVED_ACROSS_BOOT = .;
} > reset_save_area 

.app_data: AT(___ROM_AT)
{
   	* (.sdata)
   	* (.data)
		.= ALIGN(0x4) ;
   	*(.ARM.extab)
		.= ALIGN(0x4) ;
       __exception_table_start__ = .;
   	EXCEPTION
       __exception_table_end__ = .;
		.= ALIGN(0x4) ;
       __sinit__ = .;
   	STATICINIT
	.= ALIGN(0x8) ;
} > m_data
.bss :
{
	.= ALIGN(0x4) ;
	__START_BSS = .;
	* (.bss)
	__END_BSS = .;
	.= ALIGN(0x8) ;
} >> m_data

_romp_at = ___ROM_AT + SIZEOF(.app_data);
.romp : AT(_romp_at)
{
    __S_romp = _romp_at;
    WRITEW(___ROM_AT);
    WRITEW(ADDR(.app_data));
    WRITEW(SIZEOF(.app_data));
    WRITEW(0);
    WRITEW(0);
    WRITEW(0);
}

__SP_INIT = . + 0x00008000;
__heap_addr = __SP_INIT;
__heap_size = 0x00008000;

}